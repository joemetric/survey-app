# v3.1

* Remarkable.include_matchers! require just one argument [#80]

* Pending groups show proper backtrace and run by default in execute mode [#49]

* Added support to blocks configuration. All Remarkable matcher and macros can
  now be configured using a block:

    should_accept_nested_attributes_for :tasks do |m|
      m.allow_destroy
      m.accept(:name => 'cool')
      m.reject(:name => '')
    end

* Added support to {{sentence}} as interpolation option in optionals.
  Previously we had:

    validate_uniqueness_of :id, :scope => [:project_id, :company_id]
    # Description: "should require unique attributes for id scoped to [:project_id, :company_id]"

  Now with the new sentence option, we can have:

    validate_uniqueness_of :id, :scope => [:project_id, :company_id]
    # Description: "should require unique attributes for id scoped to project_id and company_id"

* Added support to splat and block to optionals

* Added namespace lookup to optionals and expectations. For example, in ActiveRecord
  several matchers have :allow_nil and :allow_blank as options. So you can store
  the translation at:

    remarkable:
      activerecord:
        optionals:
          allow_nil:
            # ...
          allow_blank:
            # ...

* Added a repository to hold I18n files

# v3.0

* Added Remarkable::Matchers. Now you can include your Remarkable matchers and
  macros in test unit as well.

    class Test::Unit::TestCase
      include Spec::Matchers
      include Remarkable::Matchers
      extend  Remarkable::Macros
    end

* Added pending and disabled macros
* Added I18n
* Added DSL core structure
* Added macros core structure
* Added matchers core structure
